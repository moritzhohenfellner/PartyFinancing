{
    "contents" : "\n# Load Data ---------------------------------------------------------------\nrm(list=ls(all=TRUE))\nsetwd(\"~/git/mss/MSS/R\")\nlibrary(\"ggplot2\")\nlibrary(\"plyr\")\nlibrary(\"RColorBrewer\")\nlibrary(\"xtable\")\nsource(\"defineBeamerPlot.R\")\n\n\n#Stupid Stupid\nsetwd(\"~/git/mss/MSS/D150Out/smallStupidStuipd/1481908670856/\")\nsource(\"~/git/mss/MSS/R/generateStandardPlots.R\")\nStupidStupid = aggregated\nStupidStupid$Game=\"StupidStupid\"\n\n#Swing Stupid\nsetwd(\"~/git/mss/MSS/D150Out/smallSwingStupid/1481926279694/\")\nsource(\"~/git/mss/MSS/R/generateStandardPlots.R\")\nSwingStupid = aggregated\nSwingStupid$Game=\"SwingStupid\"\n\n#Prom Stupid\nsetwd(\"~/git/mss/MSS/D150Out/smallPromStupid/1481955685931/\")\nsource(\"~/git/mss/MSS/R/generateStandardPlots.R\")\nPromStupid = aggregated\nPromStupid$Game=\"PromStupid\"\n\nsetwd(\"~/git/mss/MSS/R/tables/\")\n# Merge -------------------------------------------------------------------\nMerged=rbind(StupidStupid, SwingStupid, PromStupid)\n\n\n\n\n# Table -------------------------------------------------------------------\n#Identifiers\ntabelIdentA = 0.7*100000+0.46*1000+c(0.25,0.5,0.75)*10\ntabelIdentB = 0.7*100000+0.48*1000+c(0.25,0.5,0.75)*10\ntabelIdentC = 0.7*100000+0.5*1000+c(0.25,0.5,0.75)*10\nallIdent = c(tabelIdentA, tabelIdentB, tabelIdentC)\n\nTableData = subset(Merged, (Merged$combinationIdentifier%in%allIdent))\nTabelRduced = TableData[,c()]\n\nrawTable = ddply(TableData, ~combinationIdentifier, summarise, p0=mean(p), pm=mean(s))\n\nTabelDataSort = TableData[(order(TableData$combinationIdentifier)),]\n\n#Means\nrawTable$MeanRandom=0\nrawTable[(order(rawTable$combinationIdentifier)),]$MeanRandom = TabelDataSort[(TabelDataSort$Game==\"StupidStupid\"),]$pEnd\n\nrawTable$MeanProtect=0\nrawTable[(order(rawTable$combinationIdentifier)),]$MeanProtect = TabelDataSort[(TabelDataSort$Game==\"SwingStupid\"),]$pEnd\n\n\nrawTable$MeanConvincible=0\nrawTable[(order(rawTable$combinationIdentifier)),]$MeanConvincible = TabelDataSort[(TabelDataSort$Game==\"PromStupid\"),]$pEnd\n\n#SD\n\nrawTable$SDRandom=0\nrawTable[(order(rawTable$combinationIdentifier)),]$SDRandom = TabelDataSort[(TabelDataSort$Game==\"StupidStupid\"),]$sdPEnd\n\nrawTable$SDProtect=0\nrawTable[(order(rawTable$combinationIdentifier)),]$SDProtect = TabelDataSort[(TabelDataSort$Game==\"SwingStupid\"),]$sdPEnd\n\n\nrawTable$SDConvincible=0\nrawTable[(order(rawTable$combinationIdentifier)),]$SDConvincible = TabelDataSort[(TabelDataSort$Game==\"PromStupid\"),]$sdPEnd\n\n\n\n\n\n\nhlines=c(-1,0,3,6,9)\nMeanTable = xtable(rawTable[,c(2:9)], caption=\"Mean result for proponents. Oponents play stupid. \\\\rot{10 runs per cell}\", digits = 2)\nalign(MeanTable) <- \"|l|l|l|ccc|ccc\"\nprint.xtable(x=MeanTable, hline.after = hlines, include.rownames = FALSE, vlines.after=vlines, caption.placement = \"top\")#, file = \"meanTable.txt\")\n\n\n\n# Winner Plot -------------------------------------------------------------\nWinner = ddply(Merged, ~combinationIdentifier, summarize, winnerIs=Game[which.max(pWin)], p0=mean(p), pm=mean(s), MaxpWin = max(pWin), sd=sd(pWin), diff=max(pWin)-min(pWin))\nWinner$winnerIs=ifelse(Winner$diff < 0.0001, \"non\", Winner$winnerIs)\n\nggplot(Winner, aes(x=p0, y=pm))+\n  geom_tile(aes(fill=as.factor(winnerIs)))+\n  #scale_fill_discrete(name=expression(p[final]))+\n  scale_fill_manual(name=\"Most Victories:\", drop=FALSE, values=c(\"SwingStupid\"=\"red\", \"StupidStupid\"=\"darkgreen\", \"PromStupid\"=\"yellow\", \"non\"=\"gray\"),\n                    labels=c(\"SwingStupid\"=\"Protect\", \"StupidStupid\"=\"Random\", \"PromStupid\"=\"Convincible\", \"non\"=\"Even\"))+\n  beamerPlot+\n  xlab(expression(p[0]))+\n  ylab(expression(p[M]))\nggsave(file=\"WinnerPlot.pdf\", width=16, height=10, dpi=100)\n\n\n\n\n\n# Chance To Win P0 vs S ---------------------------------------------------\n#Order\nMerged$Game=factor(Merged$Game,\n       levels = c(\"StupidStupid\", \"PromStupid\", \"SwingStupid\"),\n       labels = c(\"Random\", \"Convincible\", \"Protect\"))\n\nggplot(Merged, aes(x=p, y=s))+\n  geom_tile(aes(fill=pWin))+\n  scale_fill_gradientn(name=\"Share of \\nRuns Won\\nby Proponents\\n\" ,colours=brewer.pal(9,\"RdYlGn\"))+\n  beamerPlot+\n  xlab(expression(p[0]))+\n  ylab(expression(p[M]))+\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))+\n  #facet_grid(Game~.)+\n  facet_grid(~Game)+\n  theme(panel.spacing.x=unit(0.5, \"lines\"),panel.spacing.y=unit(1, \"lines\"))+\n  theme(strip.text.x = element_text(size = 18))+\n  theme(strip.text.y = element_text(size = 18))\nggsave(file=\"PWinPvsS.pdf\", width=16, height=10, dpi=100)\n\n\n",
    "created" : 1482065213530.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1159110309",
    "id" : "ADAC0BAD",
    "lastKnownWriteTime" : 1482065217,
    "path" : "~/git/mss/MSS/R/Compare.R",
    "project_path" : "Compare.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "type" : "r_source"
}